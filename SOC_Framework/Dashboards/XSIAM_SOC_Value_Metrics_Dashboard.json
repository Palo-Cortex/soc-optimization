{
  "dashboards_data": [
    {
      "name": "XSIAM SOC Value Metrics",
      "description": "Actions taken by XSIAM for the SOC",
      "status": "ENABLED",
      "layout": [
        {
          "id": "row-3521",
          "data": [
            {
              "key": "xql_1745755921627",
              "data": {
                "type": "Custom XQL",
                "width": 50,
                "height": 405,
                "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| fields value_time , value_category\n| alter soc_event_mintutes = to_integer(value_time )\n| comp sum(soc_event_mintutes) as total_soc_minutes by value_category\n| alter total_soc_hours = round(divide(total_soc_minutes,60))\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal show_callouts = `true` xaxis = value_category yaxis = total_soc_minutes,total_soc_hours seriescolor(\"total_soc_minutes\",\"#23ae4f\") seriescolor(\"total_soc_hours\",\"#7cb5ec\") xaxistitle = \"Time\" yaxistitle = \"Category\" seriestitle(\"total_soc_minutes\",\"Total SOC Minutes\") seriestitle(\"total_soc_hours\",\"Total SOC Hours\") ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "column",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "subtype",
                        "value": "grouped"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "layout",
                        "value": "horizontal"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "show_callouts",
                        "value": "true"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "value_category"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_soc_minutes,total_soc_hours"
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_soc_minutes",
                          "#23ae4f"
                        ],
                        "name": "seriescolor"
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_soc_hours",
                          "#7cb5ec"
                        ],
                        "name": "seriescolor"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxistitle",
                        "value": "\"Time\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxistitle",
                        "value": "\"Category\""
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_soc_minutes",
                          "Total SOC Minutes"
                        ],
                        "name": "seriestitle"
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_soc_hours",
                          "Total SOC Hours"
                        ],
                        "name": "seriestitle"
                      }
                    }
                  ]
                }
              }
            },
            {
              "key": "xql_1745755883243",
              "data": {
                "type": "Custom XQL",
                "width": 50,
                "height": 405,
                "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by value_tag\n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields value_tag  , total_soc_minutes  , total_soc_hours\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal show_callouts = `true` xaxis = value_tag yaxis = total_soc_minutes,total_soc_hours seriescolor(\"total_soc_hours\",\"#7cb5ec\") seriescolor(\"total_soc_minutes\",\"#23ae4f\") xaxistitle = \"Time\" yaxistitle = \"Category\" seriestitle(\"total_soc_minutes\",\"Total SOC Minutes\") seriestitle(\"total_soc_hours\",\"Total SOC Hours\") ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "column",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "subtype",
                        "value": "grouped"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "layout",
                        "value": "horizontal"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "show_callouts",
                        "value": "true"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "value_tag"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_soc_minutes,total_soc_hours"
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_soc_hours",
                          "#7cb5ec"
                        ],
                        "name": "seriescolor"
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_soc_minutes",
                          "#23ae4f"
                        ],
                        "name": "seriescolor"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxistitle",
                        "value": "\"Time\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxistitle",
                        "value": "\"Category\""
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_soc_minutes",
                          "Total SOC Minutes"
                        ],
                        "name": "seriestitle"
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_soc_hours",
                          "Total SOC Hours"
                        ],
                        "name": "seriestitle"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": "row-8840",
          "data": [
            {
              "key": "xql_1745756085465",
              "data": {
                "type": "Custom XQL",
                "width": 33.333333333333336,
                "height": 443,
                "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as value_product, Vendor as value_vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, value_product, value_vendor \n\n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by value_product , value_vendor \n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields value_product , value_vendor , total_soc_minutes  , total_soc_hours\n| sort desc total_soc_hours\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = funnel header = \"Most Used Vendors\" show_callouts = `true` show_callouts_names = `true` xaxis = value_vendor yaxis = total_soc_hours ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "funnel",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "header",
                        "value": "\"Most Used Vendors\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "show_callouts",
                        "value": "true"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "show_callouts_names",
                        "value": "true"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "value_vendor"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_soc_hours"
                      }
                    }
                  ]
                }
              }
            },
            {
              "key": "xql_1745755968440",
              "data": {
                "type": "Custom XQL",
                "width": 33.333333333333336,
                "height": 443,
                "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as value_product, Vendor as value_vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, value_product, value_vendor \n\n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by value_product, value_vendor \n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields value_product , value_vendor , total_soc_minutes  , total_soc_hours\n| alter tool = concat(concat(value_vendor  , \" \"), value_product )\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = pie subtype = full header = \"Tool Usage in Hours\" xaxis = tool yaxis = total_soc_hours ",
                "time_frame": {
                  "relativeTime": 604800000
                },
                "viewOptions": {
                  "type": "pie",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "subtype",
                        "value": "full"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "header",
                        "value": "\"Tool Usage in Hours\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "tool"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_soc_hours"
                      }
                    }
                  ]
                }
              }
            },
            {
              "key": "xql_1745756273220",
              "data": {
                "type": "Custom XQL",
                "width": 33.333333333333336,
                "height": 443,
                "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| alter soc_event_minutes = to_integer(value_time)\n| filter value_scriptid = \"Custom\"\n| comp count() as tasknameCount by value_taskname \n| fields value_taskname , taskNameCount\n| sort desc taskNameCount\n\n\n\n\n\n\n\n\n| view graph type = pie subtype = full xaxis = taskName yaxis = taskNameCount legend_percentage = `true` seriestitle(\"taskNameCount\",\"Custom Scripts Used\") ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "pie",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "subtype",
                        "value": "full"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "taskName"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "taskNameCount"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "legend_percentage",
                        "value": "true"
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "taskNameCount",
                          "Custom Scripts Used"
                        ],
                        "name": "seriestitle"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": "row-7484",
          "data": [
            {
              "key": "xql_1745756305970",
              "data": {
                "type": "Custom XQL",
                "width": 33.333333333333336,
                "height": 275,
                "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId contains \"\" or playbookId contains null\n| filter scriptID contains \"\" or scriptID contains null\n\n// Filter for just automation\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category = \"use_case\"\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (playbookId contains vt.playbook_id)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n\n| fields value_time , value_tag , value_category\n| alter soc_event_mintutes = to_integer(value_time)\n| comp sum(soc_event_mintutes) as total_soc_minutes by value_tag\n| alter total_soc_hours = divide(total_soc_minutes,60)\n| sort desc total_soc_hours \n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Use Case Time\" xaxis = value_tag yaxis = total_soc_hours ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "column",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "subtype",
                        "value": "grouped"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "layout",
                        "value": "horizontal"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "header",
                        "value": "\"Use Case Time\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "value_tag"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_soc_hours"
                      }
                    }
                  ]
                }
              }
            },
            {
              "key": "xql_1745756046680",
              "data": {
                "type": "Custom XQL",
                "width": 33.333333333333336,
                "height": 275,
                "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| alter soc_event_mintutes = to_integer(value_time)\n| comp sum(soc_event_mintutes) as total_soc_minutes\n| alter total_soc_hours = round(divide(total_soc_minutes,60))\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = single subtype = standard header = \"Hours Saved by XSIAM\" yaxis = total_soc_hours dataunit = \"Hours\" headcolor = \"#f1f7f0\" font = \"Arial\" headerfontsize = 6 ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "single",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "subtype",
                        "value": "standard"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "header",
                        "value": "\"Hours Saved by XSIAM\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_soc_hours"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "dataunit",
                        "value": "\"Hours\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "headcolor",
                        "value": "\"#f1f7f0\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "font",
                        "value": "\"Arial\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "headerfontsize",
                        "value": "6"
                      }
                    }
                  ]
                }
              }
            },
            {
              "key": "xql_1745756007422",
              "data": {
                "type": "Custom XQL",
                "width": 33.333333333333336,
                "height": 275,
                "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| alter soc_event_minutes = to_integer(value_time )\n| comp sum(soc_event_minutes) as total_soc_minutes, first(_time) as TimeFrameBegin\n| alter TimeFrameEnds = time_frame_end()\n| alter TimeFrameWeeks = divide(timestamp_diff(TimeFrameEnds  , TimeFrameBegin  ,\"DAY\"),7)\n| alter TimeFrameWeeks = if(TimeFrameWeeks < 1, 1, TimeFrameWeeks )\n| alter TimeFrameHours = multiply(TimeFrameWeeks, 40)\n| alter total_soc_hours = divide(total_soc_minutes,60)\n| alter total_fte_saved = round(divide(total_soc_hours, TimeFrameHours))\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = single subtype = standard header = \"Total FTEs Saved\" yaxis = total_fte_saved dataunit = \"FTEs\" ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "single",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "subtype",
                        "value": "standard"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "header",
                        "value": "\"Total FTEs Saved\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_fte_saved"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "dataunit",
                        "value": "\"FTEs\""
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": "row-1296",
          "data": [
            {
              "key": "xql_1745756206179",
              "data": {
                "type": "Custom XQL",
                "width": 52.63761467889909,
                "height": 400,
                "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Total Alerts\n| comp count_distinct(alert_id) as total_alerts by original_tags \n| sort desc total_alerts\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Total Alerts\" xaxis = original_tags yaxis = total_alerts xaxistitle = \"Alerts\" yaxistitle = \"Data Sources\" seriestitle(\"total_alerts\",\"Alerts by Data Source\") ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "column",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "subtype",
                        "value": "grouped"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "layout",
                        "value": "horizontal"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "header",
                        "value": "\"Total Alerts\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "original_tags"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_alerts"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxistitle",
                        "value": "\"Alerts\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxistitle",
                        "value": "\"Data Sources\""
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_alerts",
                          "Alerts by Data Source"
                        ],
                        "name": "seriestitle"
                      }
                    }
                  ]
                }
              }
            },
            {
              "key": "xql_1745756167461",
              "data": {
                "type": "Custom XQL",
                "width": 47.36238532110091,
                "height": 400,
                "phrase": "dataset = alerts \n// Total Alerts\n| comp count_distinct(alert_id) as total_alerts by alert_source \n| sort desc total_alerts\n\n\n| view graph type = pie show_callouts = `true` show_callouts_names = `true` xaxis = alert_source yaxis = total_alerts ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "pie",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "show_callouts",
                        "value": "true"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "show_callouts_names",
                        "value": "true"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "alert_source"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_alerts"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": "row-9104",
          "data": [
            {
              "key": "xql_1745755803611",
              "data": {
                "type": "Custom XQL",
                "width": 33.333333333333336,
                "height": 400,
                "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n//| filter original_tags contains \"Proofpoint\"  \n| filter resolution_status = ENUM.RESOLVED_OTHER or resolution_status = ENUM.RESOLVED_AUTO_RESOLVE or resolution_status = ENUM.RESOLVED_AUTO_RESOLVE \n| comp count_distinct(alert_id) as total_alerts by original_tags  \n| sort desc total_alerts \n//| view column order = populated\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Total Auto Resolved Alerts\" xaxis = original_tags yaxis = total_alerts xaxistitle = \"Alerts\" yaxistitle = \"Data Sources\" seriestitle(\"total_alerts\",\"Alerts by Data Source\") ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "column",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "subtype",
                        "value": "grouped"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "layout",
                        "value": "horizontal"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "header",
                        "value": "\"Total Auto Resolved Alerts\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "original_tags"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_alerts"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxistitle",
                        "value": "\"Alerts\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxistitle",
                        "value": "\"Data Sources\""
                      }
                    },
                    {
                      "func": {
                        "args": [
                          "total_alerts",
                          "Alerts by Data Source"
                        ],
                        "name": "seriestitle"
                      }
                    }
                  ]
                }
              }
            },
            {
              "key": "xql_1745756130669",
              "data": {
                "type": "Custom XQL",
                "width": 33.333333333333336,
                "height": 400,
                "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Total Incidents\n| comp count_distinct(incident_id) as total_incidents by original_tags  \n| sort desc total_incidents \n\n\n\n\n\n\n\n| view graph type = pie header = \"Total Incidents\" xaxis = original_tags yaxis = total_incidents ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "pie",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "header",
                        "value": "\"Total Incidents\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "original_tags"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_incidents"
                      }
                    }
                  ]
                }
              }
            },
            {
              "key": "xql_1745756360597",
              "data": {
                "type": "Custom XQL",
                "width": 33.333333333333336,
                "height": 400,
                "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Open manual alerts\n| filter resolution_status = ENUM.NEW or resolution_status = ENUM.UNDER_INVESTIGATION \n| comp count_distinct(incident_id) as total_incidents by original_tags    \n| sort desc total_incidents \n\n\n\n\n\n\n\n| view graph type = pie header = \"Total Manual Incidents\" xaxis = original_tags yaxis = total_incidents ",
                "time_frame": {
                  "relativeTime": 86400000
                },
                "viewOptions": {
                  "type": "pie",
                  "commands": [
                    {
                      "command": {
                        "op": "=",
                        "name": "header",
                        "value": "\"Total Manual Incidents\""
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "xaxis",
                        "value": "original_tags"
                      }
                    },
                    {
                      "command": {
                        "op": "=",
                        "name": "yaxis",
                        "value": "total_incidents"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      ],
      "default_dashboard_id": 1,
      "global_id": "9ba311c2c2414f3bb09eee0742daad78",
      "metadata": {
        "params": []
      }
    }
  ],
  "widgets_data": [
    {
      "widget_key": "xql_1745755803611",
      "title": "Alerts Auto Resolved",
      "creation_time": 1745755803611,
      "description": "This includes deduping (Palo SOC Framework), auto triage, and auto-resolution by XSIAM",
      "data": {
        "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n//| filter original_tags contains \"Proofpoint\"  \n| filter resolution_status = ENUM.RESOLVED_OTHER or resolution_status = ENUM.RESOLVED_AUTO_RESOLVE or resolution_status = ENUM.RESOLVED_AUTO_RESOLVE \n| comp count_distinct(alert_id) as total_alerts by original_tags  \n| sort desc total_alerts \n//| view column order = populated\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Total Auto Resolved Alerts\" xaxis = original_tags yaxis = total_alerts xaxistitle = \"Alerts\" yaxistitle = \"Data Sources\" seriestitle(\"total_alerts\",\"Alerts by Data Source\") ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "column",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "subtype",
                "value": "grouped"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "layout",
                "value": "horizontal"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "header",
                "value": "\"Total Auto Resolved Alerts\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "original_tags"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_alerts"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxistitle",
                "value": "\"Alerts\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxistitle",
                "value": "\"Data Sources\""
              }
            },
            {
              "func": {
                "args": [
                  "total_alerts",
                  "Alerts by Data Source"
                ],
                "name": "seriestitle"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "alerts"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745755883243",
      "title": "Time Saved by XSIAM per Task",
      "creation_time": 1745755883243,
      "description": null,
      "data": {
        "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by value_tag\n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields value_tag  , total_soc_minutes  , total_soc_hours\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal show_callouts = `true` xaxis = value_tag yaxis = total_soc_minutes,total_soc_hours seriescolor(\"total_soc_hours\",\"#7cb5ec\") seriescolor(\"total_soc_minutes\",\"#23ae4f\") xaxistitle = \"Time\" yaxistitle = \"Category\" seriestitle(\"total_soc_minutes\",\"Total SOC Minutes\") seriestitle(\"total_soc_hours\",\"Total SOC Hours\") ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "column",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "subtype",
                "value": "grouped"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "layout",
                "value": "horizontal"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "show_callouts",
                "value": "true"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "value_tag"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_soc_minutes,total_soc_hours"
              }
            },
            {
              "func": {
                "args": [
                  "total_soc_hours",
                  "#7cb5ec"
                ],
                "name": "seriescolor"
              }
            },
            {
              "func": {
                "args": [
                  "total_soc_minutes",
                  "#23ae4f"
                ],
                "name": "seriescolor"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxistitle",
                "value": "\"Time\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxistitle",
                "value": "\"Category\""
              }
            },
            {
              "func": {
                "args": [
                  "total_soc_minutes",
                  "Total SOC Minutes"
                ],
                "name": "seriestitle"
              }
            },
            {
              "func": {
                "args": [
                  "total_soc_hours",
                  "Total SOC Hours"
                ],
                "name": "seriestitle"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "xsiam_playbookmetrics_raw",
          "value_tags"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745755921627",
      "title": "Time Save by Category",
      "creation_time": 1745755921627,
      "description": "Total time saved by Category that XSIAM is helping SOC",
      "data": {
        "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| fields value_time , value_category\n| alter soc_event_mintutes = to_integer(value_time )\n| comp sum(soc_event_mintutes) as total_soc_minutes by value_category\n| alter total_soc_hours = round(divide(total_soc_minutes,60))\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal show_callouts = `true` xaxis = value_category yaxis = total_soc_minutes,total_soc_hours seriescolor(\"total_soc_minutes\",\"#23ae4f\") seriescolor(\"total_soc_hours\",\"#7cb5ec\") xaxistitle = \"Time\" yaxistitle = \"Category\" seriestitle(\"total_soc_minutes\",\"Total SOC Minutes\") seriestitle(\"total_soc_hours\",\"Total SOC Hours\") ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "column",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "subtype",
                "value": "grouped"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "layout",
                "value": "horizontal"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "show_callouts",
                "value": "true"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "value_category"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_soc_minutes,total_soc_hours"
              }
            },
            {
              "func": {
                "args": [
                  "total_soc_minutes",
                  "#23ae4f"
                ],
                "name": "seriescolor"
              }
            },
            {
              "func": {
                "args": [
                  "total_soc_hours",
                  "#7cb5ec"
                ],
                "name": "seriescolor"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxistitle",
                "value": "\"Time\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxistitle",
                "value": "\"Category\""
              }
            },
            {
              "func": {
                "args": [
                  "total_soc_minutes",
                  "Total SOC Minutes"
                ],
                "name": "seriestitle"
              }
            },
            {
              "func": {
                "args": [
                  "total_soc_hours",
                  "Total SOC Hours"
                ],
                "name": "seriestitle"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "xsiam_playbookmetrics_raw",
          "value_tags"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745755968440",
      "title": "Tools used by XSIAM by Hour",
      "creation_time": 1745755968440,
      "description": "Which tools is XSIAM uniquely automating most of the time by number of hours",
      "data": {
        "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as value_product, Vendor as value_vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, value_product, value_vendor \n\n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by value_product, value_vendor \n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields value_product , value_vendor , total_soc_minutes  , total_soc_hours\n| alter tool = concat(concat(value_vendor  , \" \"), value_product )\n| sort desc total_soc_minutes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = pie subtype = full header = \"Tool Usage in Hours\" xaxis = tool yaxis = total_soc_hours ",
        "time_frame": {
          "relativeTime": 604800000
        },
        "viewOptions": {
          "type": "pie",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "subtype",
                "value": "full"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "header",
                "value": "\"Tool Usage in Hours\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "tool"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_soc_hours"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "xsiam_playbookmetrics_raw",
          "value_tags"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745756007422",
      "title": "Total FTEs Saved",
      "creation_time": 1745756007422,
      "description": "How many FTEs time it would have taken",
      "data": {
        "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| alter soc_event_minutes = to_integer(value_time )\n| comp sum(soc_event_minutes) as total_soc_minutes, first(_time) as TimeFrameBegin\n| alter TimeFrameEnds = time_frame_end()\n| alter TimeFrameWeeks = divide(timestamp_diff(TimeFrameEnds  , TimeFrameBegin  ,\"DAY\"),7)\n| alter TimeFrameWeeks = if(TimeFrameWeeks < 1, 1, TimeFrameWeeks )\n| alter TimeFrameHours = multiply(TimeFrameWeeks, 40)\n| alter total_soc_hours = divide(total_soc_minutes,60)\n| alter total_fte_saved = round(divide(total_soc_hours, TimeFrameHours))\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = single subtype = standard header = \"Total FTEs Saved\" yaxis = total_fte_saved dataunit = \"FTEs\" ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "single",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "subtype",
                "value": "standard"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "header",
                "value": "\"Total FTEs Saved\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_fte_saved"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "dataunit",
                "value": "\"FTEs\""
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "value_tags",
          "xsiam_playbookmetrics_raw"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745756046680",
      "title": "Total SOC Hours Worked by XSIAM",
      "creation_time": 1745756046680,
      "description": "The number of hours worked by XSIAM automations",
      "data": {
        "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| alter soc_event_mintutes = to_integer(value_time)\n| comp sum(soc_event_mintutes) as total_soc_minutes\n| alter total_soc_hours = round(divide(total_soc_minutes,60))\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = single subtype = standard header = \"Hours Saved by XSIAM\" yaxis = total_soc_hours dataunit = \"Hours\" headcolor = \"#f1f7f0\" font = \"Arial\" headerfontsize = 6 ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "single",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "subtype",
                "value": "standard"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "header",
                "value": "\"Hours Saved by XSIAM\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_soc_hours"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "dataunit",
                "value": "\"Hours\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "headcolor",
                "value": "\"#f1f7f0\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "font",
                "value": "\"Arial\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "headerfontsize",
                "value": "6"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "xsiam_playbookmetrics_raw",
          "value_tags"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745756085465",
      "title": "XSIAM Vendor Usage",
      "creation_time": 1745756085465,
      "description": "Which Vendors are being most often automated by XSIAM.",
      "data": {
        "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, Product as value_product, Vendor as value_vendor\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, value_product, value_vendor \n\n\n| alter soc_event_minutes = to_integer(value_time)\n| comp sum(soc_event_minutes) as total_soc_minutes by value_product , value_vendor \n| alter total_soc_hours = round(divide(total_soc_minutes , 60))\n| fields value_product , value_vendor , total_soc_minutes  , total_soc_hours\n| sort desc total_soc_hours\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n| view graph type = funnel header = \"Most Used Vendors\" show_callouts = `true` show_callouts_names = `true` xaxis = value_vendor yaxis = total_soc_hours ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "funnel",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "header",
                "value": "\"Most Used Vendors\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "show_callouts",
                "value": "true"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "show_callouts_names",
                "value": "true"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "value_vendor"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_soc_hours"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "xsiam_playbookmetrics_raw",
          "value_tags"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745756130669",
      "title": "Total Incidents after Grouping",
      "creation_time": 1745756130669,
      "description": "XSIAM grouping into incidents",
      "data": {
        "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Total Incidents\n| comp count_distinct(incident_id) as total_incidents by original_tags  \n| sort desc total_incidents \n\n\n\n\n\n\n\n| view graph type = pie header = \"Total Incidents\" xaxis = original_tags yaxis = total_incidents ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "pie",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "header",
                "value": "\"Total Incidents\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "original_tags"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_incidents"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "alerts"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745756167461",
      "title": "Total Alerts By Source",
      "creation_time": 1745756167461,
      "description": "How many alerts are native XSIAM alerts",
      "data": {
        "phrase": "dataset = alerts \n// Total Alerts\n| comp count_distinct(alert_id) as total_alerts by alert_source \n| sort desc total_alerts\n\n\n| view graph type = pie show_callouts = `true` show_callouts_names = `true` xaxis = alert_source yaxis = total_alerts ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "pie",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "show_callouts",
                "value": "true"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "show_callouts_names",
                "value": "true"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "alert_source"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_alerts"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "alerts"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745756206179",
      "title": "Total Alerts",
      "creation_time": 1745756206179,
      "description": "All alerts firing by alert type",
      "data": {
        "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Total Alerts\n| comp count_distinct(alert_id) as total_alerts by original_tags \n| sort desc total_alerts\n\n\n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Total Alerts\" xaxis = original_tags yaxis = total_alerts xaxistitle = \"Alerts\" yaxistitle = \"Data Sources\" seriestitle(\"total_alerts\",\"Alerts by Data Source\") ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "column",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "subtype",
                "value": "grouped"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "layout",
                "value": "horizontal"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "header",
                "value": "\"Total Alerts\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "original_tags"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_alerts"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxistitle",
                "value": "\"Alerts\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxistitle",
                "value": "\"Data Sources\""
              }
            },
            {
              "func": {
                "args": [
                  "total_alerts",
                  "Alerts by Data Source"
                ],
                "name": "seriestitle"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "alerts"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745756273220",
      "title": "Custom Scripts Usage",
      "creation_time": 1745756273220,
      "description": null,
      "data": {
        "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter scriptID != \"\" and scriptID != null\n\n\n// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run\n\n| alter dedupkey = concat(incidentID,taskId, alertID)\n| dedup dedupkey\n\n\n// Filter for just automation\n//| filter alerttype != \"Unclassified\"\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n| alter ScriptID  =  if ( scriptID  ~= \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89abAB][0-9a-f]{3}-[0-9a-f]{12}$\", \"Custom\", ScriptID )\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category != \"use_case\" and Time != \"\" and Time != null and ScriptID != \"\" and ScriptID != null\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time\n) as vt (scriptID contains vt.value_scriptid)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time \n\n\n| alter soc_event_minutes = to_integer(value_time)\n| filter value_scriptid = \"Custom\"\n| comp count() as tasknameCount by value_taskname \n| fields value_taskname , taskNameCount\n| sort desc taskNameCount\n\n\n\n\n\n\n\n\n| view graph type = pie subtype = full xaxis = taskName yaxis = taskNameCount legend_percentage = `true` seriestitle(\"taskNameCount\",\"Custom Scripts Used\") ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "pie",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "subtype",
                "value": "full"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "taskName"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "taskNameCount"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "legend_percentage",
                "value": "true"
              }
            },
            {
              "func": {
                "args": [
                  "taskNameCount",
                  "Custom Scripts Used"
                ],
                "name": "seriestitle"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "xsiam_playbookmetrics_raw",
          "value_tags"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745756305970",
      "title": "Common Use Cases",
      "creation_time": 1745756305970,
      "description": "Which Use Cases are most often being executed",
      "data": {
        "phrase": "dataset = xsiam_playbookmetrics_raw\n| alter Tasks = Tasks->[]\n| arrayexpand Tasks\n\n// TODO apply a datamodel to these two objects instead (Tasks and Alert)\n| alter\ntaskState = tasks->state,\ntaskType = tasks->type,\ntaskId = tasks->id,\ntaskName = tasks->name,\nscriptID = tasks->scriptId,\nincidentID = alert->[0].parentXDRIncident,\nalertID = alert->[0].id,\nalertName = alert->name,\nalertType = alert->type,\nplaybookId = alert->playbookId\n\n| filter taskType not in (\"start\", \"title\", \"condition\")\n| filter playbookId contains \"\" or playbookId contains null\n| filter scriptID contains \"\" or scriptID contains null\n\n// Filter for just automation\n| filter taskState = \"Completed\"\n| filter tasktype = \"regular\"\n\n\n//TODO make this a lookup table and join instead to make it scalable\n| join type = inner (dataset = value_tags \n| filter Category = \"use_case\"\n| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time, PlaybookID as playbook_id\n) as vt (playbookId contains vt.playbook_id)\n| fields value_category, value_scriptid, value_tag, value_taskname, value_time, _time, playbook_id \n\n| fields value_time , value_tag , value_category\n| alter soc_event_mintutes = to_integer(value_time)\n| comp sum(soc_event_mintutes) as total_soc_minutes by value_tag\n| alter total_soc_hours = divide(total_soc_minutes,60)\n| sort desc total_soc_hours \n\n\n\n\n\n\n| view graph type = column subtype = grouped layout = horizontal header = \"Use Case Time\" xaxis = value_tag yaxis = total_soc_hours ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "column",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "subtype",
                "value": "grouped"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "layout",
                "value": "horizontal"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "header",
                "value": "\"Use Case Time\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "value_tag"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_soc_hours"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "xsiam_playbookmetrics_raw",
          "value_tags"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    },
    {
      "widget_key": "xql_1745756360597",
      "title": "Analysts Incidents",
      "creation_time": 1745756360597,
      "description": "The total incidents left-over for analysts to analize.",
      "data": {
        "phrase": "dataset = alerts \n| arrayexpand original_tags\n| filter original_tags contains \"DS:\"\n// Open manual alerts\n| filter resolution_status = ENUM.NEW or resolution_status = ENUM.UNDER_INVESTIGATION \n| comp count_distinct(incident_id) as total_incidents by original_tags    \n| sort desc total_incidents \n\n\n\n\n\n\n\n| view graph type = pie header = \"Total Manual Incidents\" xaxis = original_tags yaxis = total_incidents ",
        "time_frame": {
          "relativeTime": 86400000
        },
        "viewOptions": {
          "type": "pie",
          "commands": [
            {
              "command": {
                "op": "=",
                "name": "header",
                "value": "\"Total Manual Incidents\""
              }
            },
            {
              "command": {
                "op": "=",
                "name": "xaxis",
                "value": "original_tags"
              }
            },
            {
              "command": {
                "op": "=",
                "name": "yaxis",
                "value": "total_incidents"
              }
            }
          ]
        }
      },
      "support_time_range": true,
      "additional_info": {
        "query_tables": [
          "alerts"
        ],
        "query_uses_library": false
      },
      "creator_mail": "sbrumley@paloaltonetworks.com"
    }
  ]
}